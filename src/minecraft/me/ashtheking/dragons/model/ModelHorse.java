// Date: 5/3/2012 5:46:07 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package me.ashtheking.dragons.model;

import net.minecraft.src.*;
public class ModelHorse extends ModelBase
{
  //fields
    ModelRenderer Head;
    ModelRenderer ForeHead;
    ModelRenderer LeftEar;
    ModelRenderer RightEar;
    ModelRenderer TopNeck;
    ModelRenderer Neck;
    ModelRenderer Body;
    ModelRenderer BackRightLeg;
    ModelRenderer BackLeftLeg;
    ModelRenderer FrontRightLeg;
    ModelRenderer FrontLeftLeg;
    ModelRenderer Tail;
    ModelRenderer NeckFur;
    ModelRenderer TopNeckFur;
  
  public ModelHorse()
  {
    textureWidth = 128;
    textureHeight = 64;
    
      Head = new ModelRenderer(this, 86, 2);
      Head.addBox(0F, 0F, -10F, 6, 5, 10);
      Head.setRotationPoint(-3F, -7F, -11F);
      Head.setTextureSize(128, 64);
      Head.mirror = true;
      setRotation(Head, 0.5235988F, 0F, 0F);
      ForeHead = new ModelRenderer(this, 55, 0);
      ForeHead.addBox(0F, 0F, 0F, 6, 1, 5);
      ForeHead.setRotationPoint(-3F, -5F, -16F);
      ForeHead.setTextureSize(128, 64);
      ForeHead.mirror = true;
      setRotation(ForeHead, 0.5235988F, 0F, 0F);
      LeftEar = new ModelRenderer(this, 75, 7);
      LeftEar.addBox(0F, 0F, 0F, 2, 3, 1);
      LeftEar.setRotationPoint(1F, -9F, -13F);
      LeftEar.setTextureSize(128, 64);
      LeftEar.mirror = true;
      setRotation(LeftEar, 0.4363323F, 0F, 0F);
      RightEar = new ModelRenderer(this, 75, 12);
      RightEar.addBox(0F, 0F, 0F, 2, 3, 1);
      RightEar.setRotationPoint(-3F, -9F, -13F);
      RightEar.setTextureSize(128, 64);
      RightEar.mirror = true;
      setRotation(RightEar, 0.4363323F, 0F, 0F);
      TopNeck = new ModelRenderer(this, 55, 25);
      TopNeck.addBox(0F, 0F, 0F, 6, 2, 4);
      TopNeck.setRotationPoint(-3F, -6.5F, -12F);
      TopNeck.setTextureSize(128, 64);
      TopNeck.mirror = true;
      setRotation(TopNeck, 0F, 0F, 0F);
      Neck = new ModelRenderer(this, 46, 33);
      Neck.addBox(0F, 0F, -7F, 6, 5, 9);
      Neck.setRotationPoint(-3F, 0F, -5F);
      Neck.setTextureSize(128, 64);
      Neck.mirror = true;
      setRotation(Neck, -1.134464F, 0F, 0F);
      Body = new ModelRenderer(this, 80, 19);
      Body.addBox(0F, 0F, 0F, 12, 20, 10);
      Body.setRotationPoint(-6F, 11F, -9F);
      Body.setTextureSize(128, 64);
      Body.mirror = true;
      setRotation(Body, 1.570796F, 0F, 0F);
      BackRightLeg = new ModelRenderer(this, 36, 48);
      BackRightLeg.addBox(-3F, 0F, -2F, 3, 13, 3);
      BackRightLeg.setRotationPoint(-3F, 11F, 11F);
      BackRightLeg.setTextureSize(128, 64);
      BackRightLeg.mirror = true;
      setRotation(BackRightLeg, 0F, 0F, 0F);
      BackLeftLeg = new ModelRenderer(this, 36, 48);
      BackLeftLeg.addBox(-1F, 0F, -2F, 3, 13, 3);
      BackLeftLeg.setRotationPoint(4F, 11F, 11F);
      BackLeftLeg.setTextureSize(128, 64);
      BackLeftLeg.mirror = true;
      setRotation(BackLeftLeg, 0F, 0F, 0F);
      FrontRightLeg = new ModelRenderer(this, 36, 48);
      FrontRightLeg.addBox(-3F, 0F, -3F, 3, 13, 3);
      FrontRightLeg.setRotationPoint(-3F, 11F, -5F);
      FrontRightLeg.setTextureSize(128, 64);
      FrontRightLeg.mirror = true;
      setRotation(FrontRightLeg, 0F, 0F, 0F);
      FrontLeftLeg = new ModelRenderer(this, 36, 48);
      FrontLeftLeg.addBox(-1F, 0F, -3F, 3, 13, 3);
      FrontLeftLeg.setRotationPoint(4F, 11F, -5F);
      FrontLeftLeg.setTextureSize(128, 64);
      FrontLeftLeg.mirror = true;
      setRotation(FrontLeftLeg, 0F, 0F, 0F);
      Tail = new ModelRenderer(this, 1, 49);
      Tail.addBox(0F, 0F, 0F, 2, 2, 12);
      Tail.setRotationPoint(-1F, 1.5F, 11F);
      Tail.setTextureSize(128, 64);
      Tail.mirror = true;
      setRotation(Tail, -1.256637F, 0F, 0F);
      NeckFur = new ModelRenderer(this, 25, 30);
      NeckFur.addBox(0F, -8F, 0F, 2, 9, 1);
      NeckFur.setRotationPoint(-1F, 1F, -5F);
      NeckFur.setTextureSize(128, 64);
      NeckFur.mirror = true;
      setRotation(NeckFur, 0.4363323F, 0F, 0F);
      TopNeckFur = new ModelRenderer(this, 1, 33);
      TopNeckFur.addBox(0F, 0F, 0F, 2, 1, 4);
      TopNeckFur.setRotationPoint(-1F, -7F, -11.5F);
      TopNeckFur.setTextureSize(128, 64);
      TopNeckFur.mirror = true;
      setRotation(TopNeckFur, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    Head.render(f5);
    ForeHead.render(f5);
    LeftEar.render(f5);
    RightEar.render(f5);
    TopNeck.render(f5);
    Neck.render(f5);
    Body.render(f5);
    BackRightLeg.render(f5);
    BackLeftLeg.render(f5);
    FrontRightLeg.render(f5);
    FrontLeftLeg.render(f5);
    Tail.render(f5);
    NeckFur.render(f5);
    TopNeckFur.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
	  FrontRightLeg.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
      FrontLeftLeg.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
      BackRightLeg.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
      BackLeftLeg.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    super.setRotationAngles(f, f1, f2, f3, f4, f5);
  }

}
